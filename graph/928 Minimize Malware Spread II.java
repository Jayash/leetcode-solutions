class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        
        int NumberOfNode = graph.length;
        int minNode = -1;
        int min = Integer.MAX_VALUE;
        for(int i: initial) {
            Queue<Integer> queue = new LinkedList<>();
            Set<Integer> visited = new HashSet<>();
            
            for(int x: initial) {
                if(x != i) {
                    queue.add(x);
                    visited.add(x);
                }
            }
            while(!queue.isEmpty()) {
                int size = queue.size();
                
                while(size-- > 0) {
                    int num = queue.poll();
                    int[] graphNode = graph[num];
                    
                    for(int j=0; j<NumberOfNode; j++) {
                        if(graphNode[j] == 1 && j != i && !visited.contains(j)) {
                            queue.add(j);
                            visited.add(j);
                        }
                    }
                    
                }
            }
            
            if(visited.size() < min) {
                min = visited.size();
                minNode = i;
            } else if(visited.size() == min && i < minNode) minNode = i;
        }
        return minNode;
    }
}


/* 

    
    


*/
